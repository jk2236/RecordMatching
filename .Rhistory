pdf(file=file.path(save.dir, 'ba_cor_pc5_raw_hclust.pdf'), width=20, height=18)
corrplot(cor.raw, method="color", outline=TRUE, addgrid.col='grey',
order='hclust', hclust.method='complete',
tl.col="black", tl.cex=0.8, tl.offset=0.5,
cl.cex=2, cl.pos="r", cl.ratio=0.12, cl.offset=0,
main='Correlation between PC projections, n.pc=5, raw, hclust', mar =c(0, 0, 3 , 0), cex.main=2)
dev.off()
pdf(file=file.path(save.dir, 'cor_pc5_raw.pdf'), width=8, height=6)
corrplot(cor.pcs.raw, method="color", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=0.8, tl.offset=0.5,
cl.cex=2, cl.pos="r", cl.ratio=0.12, cl.offset=0,
main='Correlation between PC coordinates, n.pc=5, raw', mar =c(0, 0, 3 , 0), cex.main=2)
dev.off()
?corrplot
pdf(file=file.path(save.dir, 'cor_pc5_raw.pdf'), width=8, height=6)
corrplot(cor.pcs.raw, method="circle", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=0.8, tl.offset=0.5,
cl.cex=2, cl.pos="r", cl.ratio=0.12, cl.offset=0,
main='Correlation between PC coordinates, n.pc=5, raw',
mar =c(0, 0, 3 , 0), cex.main=1)
dev.off()
pdf(file=file.path(save.dir, 'cor_pc5_raw.pdf'), width=8, height=6)
corrplot(cor.pcs.raw, method="circle", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=0.8, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.12, cl.offset=0,
main='Correlation between PC coordinates, n.pc=5, raw',
mar =c(0, 0, 3 , 0), cex.main=1)
dev.off()
pdf(file=file.path(save.dir, 'cor_pc5_raw.pdf'), width=8, height=6)
corrplot(cor.pcs.raw, method="circle", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.12, cl.offset=0,
main='Correlation between PC coordinates, n.pc=5, raw',
mar =c(0, 0, 3 , 0), cex.main=1)
dev.off()
pdf(file=file.path(save.dir, 'cor_pc5_raw.pdf'), width=8, height=6)
corrplot(cor.pcs.raw, method="circle", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.12, cl.offset=1,
main='Correlation between PC coordinates, n.pc=5, raw',
mar =c(0, 0, 3 , 0), cex.main=1)
dev.off()
pdf(file=file.path(save.dir, 'cor_pc5_raw.pdf'), width=8, height=6)
corrplot(cor.pcs.raw, method="circle", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.12, cl.offset=2,
main='Correlation between PC coordinates, n.pc=5, raw',
mar =c(0, 0, 3 , 0), cex.main=1)
dev.off()
pdf(file=file.path(save.dir, 'cor_pc5_raw.pdf'), width=8, height=6)
corrplot(cor.pcs.raw, method="circle", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.12, cl.offset=2,
main='Correlation between PC coordinates, n.pc=5, raw',
mar =c(0, 0, 3 , 0), cex.main=1)
dev.off()
pdf(file=file.path(save.dir, 'cor_pc5_raw.pdf'), width=8, height=6)
corrplot(cor.pcs.raw, method="circle", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.12, cl.offset=3,
main='Correlation between PC coordinates, n.pc=5, raw',
mar =c(0, 0, 3 , 0), cex.main=1)
dev.off()
pdf(file=file.path(save.dir, 'cor_pc5_raw.pdf'), width=7, height=5)
corrplot(cor.pcs.raw, method="circle", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.12, cl.offset=1,
main='Correlation between PC coordinates, n.pc=5, raw',
mar =c(0, 0, 3 , 0), cex.main=1)
dev.off()
pdf(file=file.path(save.dir, 'cor_pc5_raw.pdf'), width=7, height=5)
corrplot(cor.pcs.raw, method="circle", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.15, cl.offset=1,
main='Correlation between PC coordinates, n.pc=5, raw',
mar =c(0, 0, 3 , 0), cex.main=1)
dev.off()
pdf(file=file.path(save.dir, 'cor_pc5_raw.pdf'), width=7, height=5)
corrplot(cor.pcs.raw, method="circle", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.25, cl.offset=1,
main='Correlation between PC coordinates, n.pc=5, raw',
mar =c(0, 0, 3 , 0), cex.main=1)
dev.off()
pdf(file=file.path(save.dir, 'cor_pc5_raw.pdf'), width=7, height=5)
corrplot(cor.pcs.raw, method="circle", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.25, cl.offset=1,
addCoef.col="#ce95a4",
main='Correlation between PC coordinates, n.pc=5, raw',
mar c(0, 0, 3 , 0), cex.main=1)
dev.off()
pdf(file=file.path(save.dir, 'cor_pc5_raw.pdf'), width=7, height=5)
corrplot(cor.pcs.raw, method="circle", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.25, cl.offset=1,
addCoef.col="#ce95a4",
main='Correlation between PC coordinates, n.pc=5, raw',
mar=c(0, 0, 3 , 0), cex.main=1)
dev.off()
pdf(file=file.path(save.dir, 'cor_pc5_raw.pdf'), width=7, height=5)
corrplot(cor.pcs.raw, method="circle", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.25, cl.offset=1,
addCoef.col="black",
main='Correlation between PC coordinates, n.pc=5, raw',
mar=c(0, 0, 3 , 0), cex.main=1)
dev.off()
source('~/Desktop/Cancer_Genomics/ImmuneProject/R/MESOMICS/pc_samp_corr_plt_pc5.R')
source('~/Desktop/Cancer_Genomics/ImmuneProject/R/MESOMICS/pc_samp_corr_plt_pc5.R')
pdf(file=file.path(save.dir, 'cor_pc5_rt.pdf'), width=7, height=5)
corrplot(cor.pcs.rt, method="circle", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.25, cl.offset=1,
addCoef.col="grey",
main='Correlation between PC coordinates, n.pc=5, raw',
mar=c(0, 0, 3 , 0), cex.main=1)
dev.off()
source('~/Desktop/Cancer_Genomics/ImmuneProject/R/MESOMICS/pc_samp_corr_plt_pc5.R')
pdf(file=file.path(save.dir, 'cor_pc5_rt.pdf'), width=7, height=5)
corrplot(cor.pcs.rt, method="color", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.25, cl.offset=1,
addCoef.col="#808080",
main='Correlation between PC coordinates, n.pc=5, raw',
mar=c(0, 0, 3 , 0), cex.main=1)
dev.off()
source('~/Desktop/Cancer_Genomics/ImmuneProject/R/MESOMICS/pc_samp_corr_plt_pc5.R')
source('~/Desktop/Cancer_Genomics/ImmuneProject/R/MESOMICS/pc_samp_corr_plt_pc10.R')
pdf(file=file.path(save.dir, 'cor_pc10_rt.pdf'), width=10, height=9)
corrplot(cor.pcs.rt, method="color", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.25, cl.offset=1,
addCoef.col="#808080",
main='Correlation between PC coordinates, n.pc=10, raw',
mar=c(0, 0, 3 , 0), cex.main=1)
dev.off()
pdf(file=file.path(save.dir, 'cor_pc10_rt.pdf'), width=8, height=7)
corrplot(cor.pcs.rt, method="color", outline=TRUE, addgrid.col='grey',
tl.col="black", tl.cex=1, tl.offset=0.5,
cl.cex=1, cl.pos="r", cl.ratio=0.25, cl.offset=1,
addCoef.col="#808080",
main='Correlation between PC coordinates, n.pc=10, raw',
mar=c(0, 0, 3 , 0), cex.main=1)
dev.off()
source('~/Desktop/Cancer_Genomics/ImmuneProject/R/MESOMICS/pc_samp_corr_plt_pc10.R')
source('~/Desktop/Cancer_Genomics/ImmuneProject/R/MESOMICS/pc_samp_corr_plt_pc10.R')
source('~/Desktop/Cancer_Genomics/ImmuneProject/R/MESOMICS/pc_samp_corr_plt_pc5.R')
source('~/Desktop/Cancer_Genomics/ImmuneProject/R/MESOMICS/pc_samp_corr_plt_pc5.R')
source('~/Desktop/Cancer_Genomics/ImmuneProject/R/MESOMICS/pc_samp_corr_plt_pc10.R')
source('~/Desktop/Cancer_Genomics/ImmuneProject/R/MESOMICS/pc_samp_corr_plt_pc5.R')
devtools::load_all(".")
?comp.match.mat
devtools::use_data_raw()
library(devtools::use_data_raw()
)
library(devtools)
devtools::use_data_raw()
install.packages("usethis")
install.packages("usethis")
library(usethis)
use_data_raw()
devtools::build_manual()
devtools::document()
build_manual()
library(devtools)
build_manual()
getwd()
system.file("extdata", "twin_test/ref_CSF1PO.vcf", package = "RecordMatching")
system.file("extdata", "twin_test/ref_CSF1PO.vcf", package = "RecordMatching")
system.file("extdata", "twin_test/ref_CSF1PO.vcf", package = "RecordMatching")
system.file("extdata", "twin_test/reference/xref_CSF1PO.vcf", package = "RecordMatching")
system.file("extdata", "twin_test/reference/ref_CSF1PO.vcf", package = "RecordMatching")
system.file("extdata", "twin_test/reference/ref_CSF1PO.vcf", package = "RecordMatching", mustWork = TRUE)
system.file("extdata", "twin_test/reference/re_CSF1PO.vcf",
package = "RecordMatching", mustWork = TRUE)
system.file("extdata", "twin_test/reference/re_CSF1PO.vcf",
package = "RecordMatching", mustWork = TRUE)
system.file("extdata", "twin_test/reference",
package = "RecordMatching", mustWork = TRUE)
?system.file
rm(list=ls())
rm(list=ls(envir=.RMEnv),envir=.RMEnv)
## ===============================================================================
marker.info <- read.table('~/Desktop/RM_prog/data/marker_positions.txt',
header=TRUE, as.is=TRUE)
rm(list=ls())
rm(list=ls(envir=.RMEnv),envir=.RMEnv)
## ===============================================================================
marker.info <- read.table('~/Desktop/RM_prog/data/marker_positions.txt',
header=TRUE, as.is=TRUE)
devtools::load_all(".")
rm(list=ls())
rm(list=ls(envir=.RMEnv),envir=.RMEnv)
## ===============================================================================
marker.f <- system.file("extdata", "marker_positions.txt",
package="RecordMatching", mustWork=TRUE)
marker.info <- read.table(marker.f, header=TRUE, as.is=TRUE)
## ===============================================================================
setup(base.dir='/Users/jaehee/Desktop/RM_prog/twin_test',
# marker.f='/Users/jaehee/Desktop/RM_prog/data/marker_positions.txt',
bgl.jar='/Users/jaehee/Desktop/RM_prog/beagle.27Jan18.7e1.jar',
vcf.exe='/usr/local/bin/vcftools')
?system.file
m <- marker.info$name
m <- marker.info$name[1]
m
ref.f <- system.file("extdata", "reference", paste("ref_", m, ".vcf", sep=''),
package="RecordMatching", mustWork=TRUE)
ref.f <- system.file("extdata", "twin_test", "reference",
paste("ref_", m, ".vcf", sep=''),
package="RecordMatching", mustWork=TRUE)
ref.f
ref.f <- system.file("extdata", "twin_test", "reference",
paste("ref_", m, ".vcf", sep=''),
package="RecordMatching", mustWork=TRUE)
phase.ref(ref.f)
ref.al.freq(ref.f, m)
for (m in marker.info$name) {
ref.f <- system.file("extdata", "twin_test", "reference",
paste("ref_", m, ".vcf", sep=''),
package="RecordMatching", mustWork=TRUE)
# if reference panel is unphased, phase them.
phase.ref(ref.f)
# otherwise, go straight to allele frequency
ref.al.freq(ref.f, m)
}
snp.f <- system.file("extdata", "twin_test", "SNP",
paste("snp_", m, ".vcf", sep=''),
package="RecordMatching", mustWork=TRUE)
ref.f <- system.file("extdata", "twin_test", "reference",
paste("ref_", m, ".vcf", sep=''),
package="RecordMatching", mustWork=TRUE)
map.f <- system.file("extdata", "twin_test", "plink.GRCh36.map",
paste("plink.chr", chr, '.GRCh36.map', sep=''),
package="RecordMatching", mustWork=TRUE)
chr=1
snp.f <- system.file("extdata", "twin_test", "SNP",
paste("snp_", m, ".vcf", sep=''),
package="RecordMatching", mustWork=TRUE)
ref.f <- system.file("extdata", "twin_test", "reference",
paste("ref_", m, ".vcf", sep=''),
package="RecordMatching", mustWork=TRUE)
map.f <- system.file("extdata", "twin_test", "plink.GRCh36.map",
paste("plink.chr", chr, '.GRCh36.map', sep=''),
package="RecordMatching", mustWork=TRUE)
m <- marker.info$name[i]
chr <- marker.info$chr[i]
snp.f <- system.file("extdata", "twin_test", "SNP",
paste("snp_", m, ".vcf", sep=''),
package="RecordMatching", mustWork=TRUE)
ref.f <- system.file("extdata", "twin_test", "reference",
paste("ref_", m, ".vcf", sep=''),
package="RecordMatching", mustWork=TRUE)
map.f <- system.file("extdata", "twin_test", "plink.GRCh36.map",
paste("plink.chr", chr, '.GRCh36.map', sep=''),
package="RecordMatching", mustWork=TRUE)
impute.str(snp.f=snp.f, ref.f=ref.f, map.f=map.f, marker=m)
i
i=1
m <- marker.info$name[i]
chr <- marker.info$chr[i]
snp.f <- system.file("extdata", "twin_test", "SNP",
paste("snp_", m, ".vcf", sep=''),
package="RecordMatching", mustWork=TRUE)
ref.f <- system.file("extdata", "twin_test", "reference",
paste("ref_", m, ".vcf", sep=''),
package="RecordMatching", mustWork=TRUE)
map.f <- system.file("extdata", "twin_test", "plink.GRCh36.map",
paste("plink.chr", chr, '.GRCh36.map', sep=''),
package="RecordMatching", mustWork=TRUE)
impute.str(snp.f=snp.f, ref.f=ref.f, map.f=map.f, marker=m)
for (i in 1:dim(marker.info)[1]) {
m <- marker.info$name[i]
chr <- marker.info$chr[i]
snp.f <- system.file("extdata", "twin_test", "SNP",
paste("snp_", m, ".vcf", sep=''),
package="RecordMatching", mustWork=TRUE)
ref.f <- system.file("extdata", "twin_test", "reference",
paste("ref_", m, ".vcf", sep=''),
package="RecordMatching", mustWork=TRUE)
map.f <- system.file("extdata", "twin_test", "plink.GRCh36.map",
paste("plink.chr", chr, '.GRCh36.map', sep=''),
package="RecordMatching", mustWork=TRUE)
impute.str(snp.f=snp.f, ref.f=ref.f, map.f=map.f, marker=m)
}
source('~/.active-rstudio-document', echo=TRUE)
devtools::load_all(".")
devtools::load_all(".")
devtools::build_vignette()
usethis::build_vignette()
devtools::load_all(".")
usethis::use_vignette()
?usethis::use_vignette
usethis::use_vignette('identical')
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all()
library(RecordMatching)
marker.f <- system.file("extdata", "marker_positions.txt",
package="RecordMatching", mustWork=TRUE)
devtools::load_all(".")
marker.f <- system.file("extdata", "marker_positions.txt",
package="RecordMatching", mustWork=TRUE)
devtools::load_all(".")
marker.info[1:2,]
kable(marker.info)
library(knitr)
kable(marker.info)
source('~/.active-rstudio-document', echo=TRUE)
devtools::load_all(".")
?setup
?impute.str
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_2.R')
head(tip.info)
table(tip.info$Ancestry.Label)
##================================================================
## Update tip.info
## merge the colors for "Hispanic" and "indigenous American" into
## one group/color called "Hispanic and Indigenous American"
##================================================================
which(tip.info$Ancestry.Label == "Hispanic")
which(tip.info$Ancestry.Label == "Indigenous American")
length(which(tip.info$Ancestry.Label == "Indigenous American"))
length(which(tip.info$Ancestry.Label == "Hispanic"))
tip.info$Ancestry.Label.2 <- tip.info$Ancestry.Label
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
table(tip.info$Ancestry.Label.2)
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
table(tip.info$Ancestry.Label.2)
length(table(tip.info$Ancestry.Label.2))
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
leg.guide.h
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
leg.guide.h
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
xtck.lab.size
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
source('~/Desktop/Coronavirus/stanford_analysis/group_fig/plt_tree_final_3.R')
t = 1
cat('\nthis is', t, 't value')
out.pre=1
cat(strrep(" ", 5), paste0(out.pre, '.vcf'), "\n")
base.dir
base.dir=1
bgl.jar=2
vcf.exe=1
message(strrep("=", 60))
message("---- Base path setup for Record Matching ----")
message("Data directory and save directory for outputs: ")
message(strrep(" ", 8), base.dir)
message("BEAGLE jar file (including full path):")
message(strrep(" ", 8), bgl.jar)
message("vcftools executable (including full path):")
message(strrep(" ", 8), vcf.exe, "\n")
message(strrep("=", 60))
tmp <- matrix(1:12, nrow=2)
tmp
tmp[2,] <- rep(1, 6)
tmp
image(tm[])
image(tmp)
graphics.off()
image(tmp)
image(t(tmp))
tmp <- matrix(1:9, nrow=3)
tmp
tmp[3,] <- 0
image(tmp)
tmp
?axis
?mtext
?plot.image
?image.plot
?image
rmarkdown::render("identical.Rmd", params = "ask")
rmarkdown::render("./vignettes/identical.Rmd", params = "ask")
getwd()
source('~/.active-rstudio-document', echo=TRUE)
devtools::load_all("~/Desktop/RM_prog/RecordMatching")
getwd()
setwd('/Users/jaehee/Desktop/RM_prog/RecordMatching/')
rmarkdown::render("./vignettes/identical.Rmd", params = "ask")
rmarkdown::render("./vignettes/identical.Rmd", params = "ask")
?rmarkdown::render
rmarkdown::render("./vignettes/identical.Rmd", params = "ask")
rmarkdown::render("./vignettes/identical.Rmd", params = "ask")
library(RecordMatching)
marker.f <- system.file("extdata", "marker_positions.txt",
package="RecordMatching", mustWork=TRUE)
marker.info <- read.table(marker.f, header=TRUE, as.is=TRUE)
loci.include <- c(1,3)
marker.info <- marker.info[loci.include,]
marker.info
cat("Loci chosen", marker.info$name)
print(paste("Loci chosen:", marker.info$name))
vignette(package="RecordMatching")
vignette(package="RecordMatching")
devtools::load_all(".")
vignette(package="RecordMatching")
vignette(package="RecordMatching")
remotes::install_local(build_vignettes = TRUE)
vignette(package="RecordMatching")
vignette(package="RecordMatching")
library(RecordMatching)
library(RecordMatching)
library(RecordMatching)
vignette(package="RecordMatching")
remove.packages("RecordMatching")
library(RecordMatching)
unlink('vignettes/identical_cache', recursive = TRUE)
getwd()
